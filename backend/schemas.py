from datetime import datetime
from typing import Optional
from pydantic import BaseModel, EmailStr

# üîπ –í—ã–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
class UserOut(BaseModel):
    id: int
    username: str
    email: EmailStr
    is_admin: bool

    class Config:
        from_attributes = True  # –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å SQLAlchemy-–º–æ–¥–µ–ª—è–º–∏

# üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserUpdate(BaseModel):
    username: str
    email: EmailStr  # –¢–µ–ø–µ—Ä—å email –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è

# üîπ –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è
class PasswordChange(BaseModel):
    old_password: str
    new_password: str

# üîπ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserCreate(BaseModel):
    username: str
    email: str
    password: str

# üîπ –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
class EventCreate(BaseModel):
    name: str
    description: Optional[str] = None
    location: str
    date: datetime
    price: int

# üîπ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
class EventOut(BaseModel):
    id: int
    name: str
    description: Optional[str]
    location: str
    date: datetime
    price: int
    category: str  # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    available_tickets: int  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤
    total_tickets: int 
    class Config:
        from_attributes = True

# üîπ –°–æ–∑–¥–∞–Ω–∏–µ –±–∏–ª–µ—Ç–∞
class TicketCreate(BaseModel):
    user_id: int
    event_id: int

# üîπ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∏–ª–µ—Ç–∞
class TicketOut(BaseModel):
    id: int
    user_id: int
    event_id: int
    purchase_date: datetime

    class Config:
        from_attributes = True

# üîπ –¢–æ–∫–µ–Ω
class Token(BaseModel):
    access_token: str
    token_type: str

# üîπ –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserLogin(BaseModel):
    email: str
    password: str